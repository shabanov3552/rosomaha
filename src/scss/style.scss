@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин

// Подключить если есть локальные файлы шрифтов
//@import "fonts/fonts";

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
//@import "fonts/icons";

// ============================================================================================================================================================================================================================================================================================================================================================================================
// Настройки шаблона ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "Montserrat";
$fontSize: rem(18); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: #000; // Цвет шрифта по умолчанию



// Настройки адаптивной сетки ===============================================================================================================================================================================================================================================================================================

// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1570;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 104;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth);

// $laptopL: em(1439.98);
$xxl: em(1399.98);

// $laptop: em(1280.98);
$xl: em(1199.98);

// $tablet: em(991.98);
$lg: em(991.98);

// $mobile: em(767.98);
$md: em(767.98);

// $mobile: em(767.98);
$md2: em(679.98);

// $mobileMiddle: em(578.98);
$sm: em(576.98);

// $mobileSmall: em(479.98);
$xs: em(479.98);

// $mobileMini: em(374.98);
$xxs: em(374.98);

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================
// Переменные
@import "base/variables";
// Обнуление ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

// Стили тега BODY ============================================================================================================================================================================================================================================================================================================================================================================================

body {

	// Скролл заблокирован
	.lg-on &,
	.lock & {
		overflow: hidden;
		touch-action: none;
		overscroll-behavior: none;
	}

	// Сайт загружен
	.loaded & {}
}

// Оболочка wrapper ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	padding-left: var(--left-sidebar);

	@supports (overflow: clip) {
		overflow: clip;
	}

	// Прижимаем footer
	>main {
		flex: 1 1 auto;
		min-height: 100vh;

		@media (max-width:$lg) {
			min-height: auto;
		}
	}

	// Фикс для слайдеров
	>* {
		min-width: 0;
	}
}

.page {
	background-color: #fff;
	position: relative;
	z-index: 4;
	padding-top: rem(30);

	.main-page & {
		padding-top: 0;
	}

	// .page__row

	&__row {
		// margin-bottom: rem(62);
		display: flex;
		gap: 60px;
		align-items: flex-end;

		@media (max-width:$md2) {
			display: block;
		}
	}

	// .page__text

	&__text {
		line-height: 144%;
		max-width: 420px;

		@media (max-width:$md2) {
			margin-bottom: rem(35);
		}
	}

	// .page__link

	&__link {
		height: 50px;
	}
}


// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {

	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: rem($containerWidth);
			margin: 0 auto;
		}

		@if ($containerPadding>0) {
			@if ($maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));

				@media (max-width:$xl) {
					padding: rem(0) rem(40);
				}

				@media (max-width:$lg) {
					padding: rem(0) rem(20);
				}
			}

			@else {
				@include adaptiveValue("padding-left", math.div($containerPadding, 2), 15);
				@include adaptiveValue("padding-right", math.div($containerPadding, 2), 15);
			}
		}
	}
}

@else {

	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;

		@if ($maxWidthContainer>0) {
			max-width: rem($containerWidth);
		}

		@else {
			@if ($containerPadding>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}

		@media (max-width: $pc) {
			max-width: rem(970);
		}

		@media (max-width: $lg) {
			max-width: rem(750);
		}

		@media (max-width: $md) {
			max-width: none;

			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";

// Подключение стилей отдельных блоков
@import "left-sidebar";
@import "sidebar-catalog";
@import "search-modal";
@import "mobile-catalog";
@import "header";
@import "footer";
@import "products-slider";
@import "product-card";

// Подключение стилей отдельных страниц
@import "home";
@import "catalog";
@import "product-detail";
@import "about";
@import "blog";
@import "experts";
@import "contacts";

.lg-sub-html {
	display: none;
}

* {
	// outline: 1px solid red !important;
}